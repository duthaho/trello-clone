name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black mypy

      - name: Run Ruff
        run: ruff check src/ tests/

      - name: Run Black
        run: black --check src/ tests/

      - name: Run MyPy
        run: mypy src/

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_pass
          MYSQL_DATABASE: trello_test
          MYSQL_USER: trello
          MYSQL_PASSWORD: trello_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run Unit Tests
        env:
          DATABASE_URL: mysql+aiomysql://trello:trello_pass@localhost:3306/trello_test
          REDIS_URL: redis://localhost:6379/0
        run: |
          pytest tests/unit -v --cov=src --cov-report=xml --cov-report=term

      - name: Run Integration Tests
        env:
          DATABASE_URL: mysql+aiomysql://trello:trello_pass@localhost:3306/trello_test
          REDIS_URL: redis://localhost:6379/0
        run: |
          pytest tests/integration -v

      - name: Check Coverage
        run: |
          coverage report --fail-under=80

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run Bandit
        run: bandit -r src/ -ll

      - name: Run Safety
        run: safety check --json

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          tags: trello-clone:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
